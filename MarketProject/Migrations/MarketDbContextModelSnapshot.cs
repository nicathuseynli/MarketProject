// <auto-generated />
using MarketProject.Datas.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MarketProject.Migrations
{
    [DbContext(typeof(MarketDbContext))]
    partial class MarketDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MarketProject.Datas.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("MarketProject.Datas.Entities.CleaningEquipmentWarehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("CleaningEquipmentWarehouses");
                });

            modelBuilder.Entity("MarketProject.Datas.Entities.ElectronicWarehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("ElectronicWarehouses");
                });

            modelBuilder.Entity("MarketProject.Datas.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("MarketId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Profession")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MarketId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("MarketProject.Datas.Entities.FoodDrinkWarehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("FoodDrinkWarehouses");
                });

            modelBuilder.Entity("MarketProject.Datas.Entities.Market", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Markets");
                });

            modelBuilder.Entity("MarketProject.Datas.Entities.PartnerCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ContractTime")
                        .HasColumnType("int");

                    b.Property<string>("ContractType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MarketId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MarketId");

                    b.ToTable("PartnerCompanies");
                });

            modelBuilder.Entity("MarketProject.Datas.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Brend")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("MarketProject.Datas.Entities.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CleaningEquipmentWarehouseId")
                        .HasColumnType("int");

                    b.Property<int>("ElectronicWarehouseId")
                        .HasColumnType("int");

                    b.Property<int>("FoodDrinkWarehouseId")
                        .HasColumnType("int");

                    b.Property<int>("MarketId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CleaningEquipmentWarehouseId")
                        .IsUnique();

                    b.HasIndex("ElectronicWarehouseId")
                        .IsUnique();

                    b.HasIndex("FoodDrinkWarehouseId")
                        .IsUnique();

                    b.HasIndex("MarketId");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("MarketProject.Datas.Entities.Employee", b =>
                {
                    b.HasOne("MarketProject.Datas.Entities.Market", "Market")
                        .WithMany("Employees")
                        .HasForeignKey("MarketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Market");
                });

            modelBuilder.Entity("MarketProject.Datas.Entities.PartnerCompany", b =>
                {
                    b.HasOne("MarketProject.Datas.Entities.Market", "Market")
                        .WithMany("PartnerCompanies")
                        .HasForeignKey("MarketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Market");
                });

            modelBuilder.Entity("MarketProject.Datas.Entities.Product", b =>
                {
                    b.HasOne("MarketProject.Datas.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MarketProject.Datas.Entities.Warehouse", b =>
                {
                    b.HasOne("MarketProject.Datas.Entities.Category", "Category")
                        .WithMany("Warehouses")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarketProject.Datas.Entities.CleaningEquipmentWarehouse", "CleaningEquipmentWarehouse")
                        .WithOne("Warehouse")
                        .HasForeignKey("MarketProject.Datas.Entities.Warehouse", "CleaningEquipmentWarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarketProject.Datas.Entities.ElectronicWarehouse", "ElectronicWarehouse")
                        .WithOne("Warehouse")
                        .HasForeignKey("MarketProject.Datas.Entities.Warehouse", "ElectronicWarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarketProject.Datas.Entities.FoodDrinkWarehouse", "FoodDrinkWarehouse")
                        .WithOne("Warehouse")
                        .HasForeignKey("MarketProject.Datas.Entities.Warehouse", "FoodDrinkWarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarketProject.Datas.Entities.Market", "Market")
                        .WithMany("Warehouses")
                        .HasForeignKey("MarketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("CleaningEquipmentWarehouse");

                    b.Navigation("ElectronicWarehouse");

                    b.Navigation("FoodDrinkWarehouse");

                    b.Navigation("Market");
                });

            modelBuilder.Entity("MarketProject.Datas.Entities.Category", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("MarketProject.Datas.Entities.CleaningEquipmentWarehouse", b =>
                {
                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("MarketProject.Datas.Entities.ElectronicWarehouse", b =>
                {
                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("MarketProject.Datas.Entities.FoodDrinkWarehouse", b =>
                {
                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("MarketProject.Datas.Entities.Market", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("PartnerCompanies");

                    b.Navigation("Warehouses");
                });
#pragma warning restore 612, 618
        }
    }
}
